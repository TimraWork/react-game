{"version":3,"sources":["theme.ts","redux/posts/reducers.ts","redux/api.ts","redux/posts/thunks.ts","redux/store.ts","components/Loader.tsx","containers/pages/Stat.tsx","redux/posts/actions.ts","components/Square.tsx","containers/pages/Board.tsx","components/Game.tsx","assets/img/rs_school_js.svg","components/parts/Logo.tsx","components/parts/Nav.tsx","components/parts/BtnFullScreen.tsx","components/Header.tsx","components/Footer.tsx","App.tsx","redux/rootReducer.ts","index.tsx"],"names":["ACCENT_COLOR","theme","createMuiTheme","palette","primary","main","secondary","typography","fontFamily","body2","fontSize","shape","borderRadius","overrides","MuiChip","root","margin","MuiTextField","borderColor","marginBottom","width","borderBottomColor","MuiButton","fontWeight","outline","MuiInputLabel","color","initialState","data","isLoading","error","posts","state","action","type","payload","_transformPosts","id","title","getPostsRequest","a","axios","get","map","console","preloadedState","Loader","className","Stat","connect","getPostsThunk","dispatch","postsList","useState","setPostsList","setIsLoading","useEffect","length","idx","Fade","in","timeout","Circle","r","cx","cy","stroke","strokeWidth","fill","strokeLinecap","Cross","x1","y1","x2","y2","Square","value","isWinner","setActive","onClick","Board","Array","squares","setSquares","xIsNext","setXIsNext","winner","setWinner","isTie","setIsTie","getWinner","winnerLines","i","firstIdx","secondIdx","thirdIdx","idxs","getStatus","el","includes","array","slice","winnerEl","audio","Audio","volume","play","filter","handleClick","Button","variant","Game","innerRef","ref","Logo","href","src","logoSrc","alt","LINKS","name","path","Nav","item","index","component","NavLink","to","exact","BtnFullScreen","onBtnFullScreenClick","IconButton","useStyles","makeStyles","createStyles","menuButton","marginLeft","spacing","logo","flexGrow","appBar","boxShadow","borderBottom","fade","light","sectionDesktop","display","breakpoints","up","alignItems","sectionMobile","Header","classes","AppBar","position","Container","maxWidth","Toolbar","Typography","Footer","target","App","fullScreenRef","setFullScreenRef","requestFullscreen","webkitRequestFullScreen","msRequestFullscreen","mozRequestFullScreen","rootReducer","combineReducers","persistConfig","key","storage","persistedReducer","persistReducer","composeEnhancers","compose","store","createStore","applyMiddleware","thunkMiddleware","persistor","persistStore","ReactDOM","render","loading","ThemeProvider","CssBaseline","document","getElementById"],"mappings":"mKACMA,EAAe,eAGRC,EAAQC,YAAe,CAClCC,QAAS,CACPC,QAAS,CACPC,KAAML,GAERM,UAAW,CACTD,KAAML,IAGVO,WAAY,CACVC,WAAY,OACZC,MAAO,CACLD,WAAY,OACZE,SAAU,SAGdC,MAAO,CACLC,aAAc,IAEhBC,UAAW,CACTC,QAAS,CACPC,KAAM,CACJC,OAAQ,kBAGZC,aAAc,CACZF,KAAM,CACJG,YAAalB,EACbmB,aAAc,OACdC,MAAO,QACP,+BAAgC,CAC9BC,kBAAmBrB,GAErB,UAAW,CACTqB,kBAAmBrB,KAIzBsB,UAAW,CACTP,KAAM,CACJQ,WAAY,OACZb,SAAU,OACV,UAAW,CACTc,QAAS,UAIfC,cAAe,CACbV,KAAM,CACJW,MAAO1B,O,iCCnDT2B,EAAe,CACnBC,KAAM,GACNC,WAAW,EACXC,MAAO,MAgCMC,EA3BD,WAAoF,IAAnFC,EAAkF,uDAAxDL,EAAcM,EAA0C,uCAC/F,OAAQA,EAAOC,MACb,IAAK,sBACH,OAAO,2BACFF,GADL,IAEEH,WAAW,IAGf,IAAK,sBACH,OAAO,2BACFG,GADL,IAEEJ,KAAMK,EAAOE,QAAQP,KACrBC,WAAW,IAGf,IAAK,0BACH,OAAO,2BACFG,GADL,IAEEH,WAAW,EACXC,MAAOG,EAAOE,QAAQL,QAG1B,QACE,OAAOE,I,0CCzBPI,EAAkB,SAAC,GACvB,MAAO,CACLC,GAF4D,EAAtCA,GAItBC,MAJ4D,EAAlCA,MAId,WAMHC,EAAe,uCAAG,8BAAAC,EAAA,+EAGNC,IAAMC,IAAI,wEAHJ,uBAGpBd,EAHoB,EAGpBA,KAHoB,kBAKpBA,EAAKe,IAAIP,IALW,gCAO3BQ,QAAQd,MAAM,kBAAd,MAP2B,yDAAH,qDAW5BS,ICvBO,ICciBM,E,eCpBXC,EAAS,kBAAM,qBAAKC,UAAU,SAAf,yB,SCiDfC,EAAOC,aAAQ,SAACjB,GAAD,OAAWA,IAAO,CAACkB,cH3ClB,yDAA6D,WAAOC,GAAP,eAAAX,EAAA,6DACxFW,EIPuC,CAACjB,KAAM,wBJM0C,SAEhEK,IAFgE,OAElFa,EAFkF,OAGxFD,EIR0D,CAACjB,KAAM,sBAAuBC,QAAS,CAACP,KJQtEwB,KAH4D,2CAA7D,wDG2CTH,EAjCgB,SAAC,GAA4B,IAA3BlB,EAA0B,EAA1BA,MAAOmB,EAAmB,EAAnBA,cAAmB,EAC5BG,mBAAStB,EAAMH,MADa,mBACvDwB,EADuD,KAC5CE,EAD4C,OAE5BD,mBAAStB,EAAMF,WAFa,mBAEvDA,EAFuD,KAE5C0B,EAF4C,KAkB9D,OAdAC,qBAAU,WACHzB,EAAMH,KAAK6B,QACdP,MAED,CAACA,EAAenB,EAAMH,KAAK6B,SAE9BD,qBAAU,WACRF,EAAavB,EAAMH,QAClB,CAACG,EAAMH,OAEV4B,qBAAU,WACRD,EAAaxB,EAAMF,aAClB,CAACE,EAAMF,UAAWqB,IAGnB,qCACE,8FACCrB,IAAcE,EAAMH,KAAK6B,OAAS,cAAC,EAAD,IAAa,KAC/CL,EAAUT,KAAI,WAAce,GAAd,IAAErB,EAAF,EAAEA,GAAIC,EAAN,EAAMA,MAAN,OACb,cAACqB,EAAA,EAAD,CAAeC,IAAI,EAAMC,QAAS,IAAMH,EAAxC,SACE,gCACE,mCAASA,EAAT,UADF,IAC8BpB,MAFrBD,Y,SE7BbyB,EAAa,kBACjB,qBAAKf,UAAU,SAAf,SACE,wBAAQgB,EAAE,KAAKC,GAAG,KAAKC,GAAG,KAAKC,OAAO,UAAUC,YAAY,IAAIC,KAAK,OAAOC,cAAc,aAIxFC,EAAY,kBAChB,sBAAKvB,UAAU,QAAf,UACE,sBAAMA,UAAU,QAAQwB,GAAG,IAAIC,GAAG,IAAIC,GAAG,KAAKC,GAAG,KAAKR,OAAO,UAAUC,YAAY,IAAIE,cAAc,UACrG,sBAAMtB,UAAU,SAASwB,GAAG,KAAKC,GAAG,IAAIC,GAAG,IAAIC,GAAG,KAAKR,OAAO,UAAUC,YAAY,IAAIE,cAAc,cAI7FM,EAAqB,SAAC,GAAkC,IAAjCC,EAAgC,EAAhCA,MAAOC,EAAyB,EAAzBA,SAAUC,EAAe,EAAfA,UACnD,OACE,yBAAQ/B,UAAS,iBAAY8B,EAAW,iBAAmB,IAAME,QAASD,EAA1E,UACa,MAAVF,GAAiB,cAAC,EAAD,IACP,MAAVA,GAAiB,cAAC,EAAD,QCvBXI,EAAY,WAAO,IAAD,IACC3B,mBAAwB4B,MAAM,GAAGb,KAAK,OADvC,mBACtBc,EADsB,KACbC,EADa,OAEC9B,oBAAkB,GAFnB,mBAEtB+B,EAFsB,KAEbC,EAFa,OAGDhC,mBAAwB,MAHvB,mBAGtBiC,EAHsB,KAGdC,EAHc,OAIHlC,oBAAkB,GAJf,mBAItBmC,EAJsB,KAIfC,EAJe,KAMvBC,EAAY,SAACR,GAWjB,IATA,IAAMS,EAAc,CAElB,CAAC,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,GAE7B,CAAC,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,GAE7B,CAAC,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,IAGXC,EAAI,EAAGA,EAAID,EAAYlC,OAAQmC,IAAK,CAAC,IAAD,cACHD,EAAYC,GADT,GACpCC,EADoC,KAC1BC,EAD0B,KACfC,EADe,KAG3C,GAAIb,EAAQW,IACVX,EAAQW,KAAcX,EAAQY,IAC9BZ,EAAQW,KAAcX,EAAQa,GAE9B,MAAO,CAACT,OAAQJ,EAAQW,GAAWG,KAAM,CAACH,EAAUC,EAAWC,IAGnE,OAAO,MA2CT,OACE,qCACE,sBAAKhD,UAAS,iBAAYuC,GAAUE,EAAQ,cAAgB,GAA9C,YAAoDJ,EAAU,gBAAkB,IAA9F,iBA1Cc,SAACE,EAAuBF,GAUxC,OARIE,EACO,WAAaA,EACbE,EACA,UAEA,UAAYJ,EAAU,IAAM,KAoC5Ba,EAAU,UAAAP,EAAUR,UAAV,eAAoBI,SAAU,KAAMF,MAEvD,qBAAKrC,UAAWuC,GAAUE,EAAQ,yBAA2B,QAA7D,SACGN,EAAQvC,KAAI,SAACuD,EAAIxC,GAAS,IAAD,EACxB,OACE,cAAC,EAAD,CAAkBkB,MAAOsB,EAAIrB,UAAU,UAAAa,EAAUR,UAAV,eAAoBc,KAAKG,SAASzC,KAAQ,KAAMoB,UAAW,kBAnCxF,SAACc,GAAe,IAAD,EAC3BQ,EAAuBlB,EAAQmB,QAErC,IAAIX,EAAUU,KAAUlB,EAAQU,GAAhC,CAGAQ,EAAMR,GAAKR,EAAU,IAAM,IAE3BD,EAAWiB,GACXf,GAAYD,GACZ,IAAMkB,GAAW,UAAAZ,EAAUU,UAAV,eAAkBd,SAAU,KAC7CC,EAAUe,GAEV,IACMC,EAAQ,IAAIC,MADDpB,EAAU,6CAA+C,6CAE1EmB,EAAME,OAAS,GACfF,EAAMG,OAENjB,EAA6C,IAApCW,EAAMO,QAAO,SAACT,GAAD,OAAQA,KAAIzC,SAiB8EmD,CAAYlD,KAAvGA,SAIjB4B,GAAUE,IACV,cAACqB,EAAA,EAAD,CAAQ9D,UAAU,aAAa+D,QAAQ,YAAY/B,QAnBjC,WACtBI,EAAWF,MAAM,GAAGb,KAAK,OACzBmB,EAAU,MACVE,GAAS,IAgBL,4BC/EKsB,EAAyB,SAAC,GAAgB,IAAfC,EAAc,EAAdA,SACtC,OACE,qBAAKjE,UAAU,OAAOkE,IAAKD,EAA3B,SACE,sBAAKjE,UAAU,cAAf,UACE,oBAAIA,UAAU,cAAd,yBACA,cAAC,EAAD,U,uFCbO,MAA0B,yCCE5BmE,EAAO,kBAClB,oBAAGC,KAAM,IAAKpE,UAAU,OAAxB,UACE,qBAAKqE,IAAKC,EAASC,IAAI,GAAGvE,UAAU,cACpC,sBAAMA,UAAU,aAAhB,SACE,sBAAMA,UAAU,cAAhB,8BCHAwE,EAAQ,CAKZ,CACEC,KAAM,OACNC,KAAM,MAIGC,EAAM,kBACjB,mCACE,qBAAK3E,UAAU,MAAf,SACGwE,EAAM5E,KAAI,SAACgF,EAAMC,GAAP,OACT,cAACf,EAAA,EAAD,CAAoBgB,UAAWC,IAASC,GAAIJ,EAAKF,KAAMO,OAAK,EAA5D,SACGL,EAAKH,MADKI,W,iBCXRK,EAAkC,SAAC,GAA4B,IAA3BC,EAA0B,EAA1BA,qBAC/C,OACE,cAACC,EAAA,EAAD,CAAYpD,QAASmD,EAArB,SACE,cAAC,IAAD,OCIAE,EAAYC,aAAW,SAACpI,GAAD,OAC3BqI,YAAa,CACXvH,KAAM,GACNwH,WAAY,CACVC,WAAYvI,EAAMwI,QAAQ,IAE5BC,KAAM,CACJC,SAAU,GAEZC,OAAQ,CACNC,UAAW,OACXC,aAAc,aAAeC,YAAK9I,EAAME,QAAQC,QAAQ4I,MAAO,MAEjEC,eAAe,aACbC,QAAS,QACRjJ,EAAMkJ,YAAYC,GAAG,MAAQ,CAC5BF,QAAS,OACTG,WAAY,WAGhBC,cAAc,aACZJ,QAAS,QACRjJ,EAAMkJ,YAAYC,GAAG,MAAQ,CAC5BF,QAAS,cAUJK,EAA2B,SAAC,GAA4B,IAA3BrB,EAA0B,EAA1BA,qBAClCsB,EAAUpB,IAEhB,OACE,cAACqB,EAAA,EAAD,CAAQC,SAAS,SAAShI,MAAM,UAAUqB,UAAWyG,EAAQZ,OAA7D,SACE,cAACe,EAAA,EAAD,CAAWC,SAAS,KAApB,SACE,eAACC,EAAA,EAAD,WACE,cAACC,EAAA,EAAD,CAAY/G,UAAWyG,EAAQd,KAA/B,SACE,cAAC,EAAD,MAGF,cAAC,EAAD,IAOA,cAAC,EAAD,CAAeR,qBAAsBA,IAGrC,qBAAKnF,UAAWyG,EAAQF,cAAxB,SACE,cAACnB,EAAA,EAAD,CAAYpF,UAAWyG,EAAQjB,WAAY7G,MAAM,UAAjD,SACE,cAAC,IAAD,gB,kBClEDqI,GAAS,kBACpB,mCACE,cAAC5B,EAAA,EAAD,CAAYzG,MAAM,UAAUyF,KAAK,+BAA+B6C,OAAO,SAAvE,SACE,cAAC,KAAD,MAEF,qBAAKjH,UAAU,YAAf,uBACA,mBAAGoE,KAAM,2BAA4BpE,UAAU,cAAciH,OAAO,SAApE,SACE,qBAAK5C,IAAKC,EAASC,IAAI,GAAGvE,UAAU,2B,QCuC3BkH,GA/BO,WAAO,IAAD,EACgB5G,mBAAqB,MADrC,mBACnB6G,EADmB,KACJC,EADI,KAe1B,OACE,qCACE,cAAC,EAAD,CAAQjC,qBAVqB,WAC/B,IAAM8B,EAAyBE,EAC3BF,GAAUA,EAAOI,mBAAmBJ,EAAOI,oBAC3CJ,GAAUA,EAAOK,yBAAyBL,EAAOK,0BACjDL,GAAUA,EAAOM,qBAAqBN,EAAOM,sBAC7CN,GAAUA,EAAOO,sBAAsBP,EAAOO,0BAMhD,cAACZ,EAAA,EAAD,CAAWC,SAAS,KAApB,SACE,eAAC,KAAD,WACE,cAAC,KAAD,CAAO5B,OAAK,EAACP,KAAK,IAAlB,SACE,cAAC,EAAD,CAAMT,SAlBD,SAACC,GACdkD,EAAiBlD,QAmBX,cAAC,KAAD,CAAOe,OAAK,EAACP,KAAK,QAAQI,UAAW7E,SAGzC,cAAC,GAAD,Q,SCrCSwH,GALKC,aAAgB,CAClC1I,U,2BdEI2I,GAAgB,CACpBC,IAAK,OACLC,Q,QAAAA,GAGIC,GAAmBC,aAAeJ,GAAeF,IAEjDO,GAKAC,KAKAC,IAHkBpI,EAGK,GAF3BqI,aAAYL,GAAkBhI,EAAgBkI,GAAiBI,aAAgBC,SAG3EC,GAAYC,aAAaL,I,6BeZ/BM,IAASC,OACP,cAAC,IAAD,CAAUP,MAAOA,GAAjB,SACE,cAAC,KAAD,CAAaQ,QAAS,KAAMJ,UAAWA,GAAvC,SACE,cAAC,IAAD,UACE,eAACK,GAAA,EAAD,CAAezL,MAAOA,EAAtB,UACE,cAAC0L,GAAA,EAAD,IACA,cAAC,GAAD,aAKRC,SAASC,eAAe,U","file":"static/js/main.f607f4e0.chunk.js","sourcesContent":["import {createMuiTheme} from '@material-ui/core/styles';\nconst ACCENT_COLOR = 'rgb(0, 0, 0)';\n\n// Create a theme instance.\nexport const theme = createMuiTheme({\n  palette: {\n    primary: {\n      main: ACCENT_COLOR\n    },\n    secondary: {\n      main: ACCENT_COLOR\n    }\n  },\n  typography: {\n    fontFamily: 'Jura',\n    body2: {\n      fontFamily: 'Jura',\n      fontSize: '1rem'\n    }\n  },\n  shape: {\n    borderRadius: 20\n  },\n  overrides: {\n    MuiChip: {\n      root: {\n        margin: '0 10px 20px 0'\n      }\n    },\n    MuiTextField: {\n      root: {\n        borderColor: ACCENT_COLOR,\n        marginBottom: '20px',\n        width: '370px',\n        '& .MuiInput-underline:before': {\n          borderBottomColor: ACCENT_COLOR\n        },\n        '&:hover': {\n          borderBottomColor: ACCENT_COLOR\n        }\n      }\n    },\n    MuiButton: {\n      root: {\n        fontWeight: 'bold',\n        fontSize: '16px',\n        '&:focus': {\n          outline: 'none'\n        }\n      }\n    },\n    MuiInputLabel: {\n      root: {\n        color: ACCENT_COLOR\n      }\n    }\n  }\n});\n","import {ActionTypes} from '../../types';\n\nconst initialState = {\n  data: [] as Array<Object> | [],\n  isLoading: false as boolean,\n  error: null as string | null\n};\n\ntype InitialStateType = typeof initialState;\n\nconst posts = (state: InitialStateType = initialState, action: ActionTypes): InitialStateType => {\n  switch (action.type) {\n    case 'timra/posts/REQUEST': {\n      return {\n        ...state,\n        isLoading: true\n      };\n    }\n    case 'timra/posts/SUCCESS': {\n      return {\n        ...state,\n        data: action.payload.data,\n        isLoading: false\n      };\n    }\n    case 'timra/posts/SET_FAILURE': {\n      return {\n        ...state,\n        isLoading: false,\n        error: action.payload.error\n      };\n    }\n    default:\n      return state;\n  }\n};\n\nexport default posts;\n","import {IPost} from '../types';\nimport axios from 'axios';\n\nexport interface IPostTransform {\n  id: number;\n  title: string;\n}\n\nconst _transformPosts = ({id, title}: IPost): IPostTransform => {\n  return {\n    id: id,\n    // img: _embedded['wp:featuredmedia'] ? _embedded['wp:featuredmedia'][0]['source_url'] : this._pushImageUrl,\n    title: title['rendered']\n    // date: this._formatDate(date),\n    // excerpt: excerpt['rendered']\n  };\n};\n\nexport const getPostsRequest = async () => {\n  try {\n    // const {data} = await axios.get<IPost[]>('https://timra.ru/timra/wp-json/wp/v2/posts?_embed&per_page=20&page=1');\n    const {data} = await axios.get('https://timra.ru/timra/wp-json/wp/v2/posts?_embed&per_page=20&page=1');\n    // console.log('data[0] = ', data[0]);\n    return data.map(_transformPosts);\n  } catch (err) {\n    console.error('ERROR IN API = ', err);\n  }\n};\n\ngetPostsRequest();\n","import {ThunkAction} from 'redux-thunk';\nimport {RootState} from '../rootReducer';\nimport {Action} from 'redux';\nimport {actionPostsSuccess, actionPostsRequest} from './actions';\nimport {getPostsRequest} from '../api';\n\nexport const getPostsThunk = (): ThunkAction<void, RootState, unknown, Action<string>> => async (dispatch) => {\n  dispatch(actionPostsRequest());\n  const postsList = await getPostsRequest();\n  dispatch(actionPostsSuccess(postsList));\n};\n","import {createStore, compose, applyMiddleware} from 'redux';\nimport rootReducer from './rootReducer';\nimport thunkMiddleware from 'redux-thunk';\nimport {persistStore, persistReducer} from 'redux-persist';\nimport storage from 'redux-persist/lib/storage';\n\nconst persistConfig = {\n  key: 'root',\n  storage\n};\n\nconst persistedReducer = persistReducer(persistConfig, rootReducer);\n\nconst composeEnhancers =\n  process.env.NODE_ENV !== 'production' &&\n  typeof (window as any) === 'object' &&\n  (window as any).__REDUX_DEVTOOLS_EXTENSION_COMPOSE__\n    ? (window as any).__REDUX_DEVTOOLS_EXTENSION_COMPOSE__({})\n    : compose;\n\nconst configureStore = (preloadedState: any) =>\n  createStore(persistedReducer, preloadedState, composeEnhancers(applyMiddleware(thunkMiddleware)));\n\nconst store = configureStore({});\nconst persistor = persistStore(store);\n\nexport {store, persistor};\n","export const Loader = () => <div className=\"loader\">Loading...</div>;\n","import React, {useEffect, useState} from 'react';\n\nimport {getPostsThunk} from '../../redux/posts';\nimport {connect} from 'react-redux';\nimport {IPost} from '../../types';\nimport {Loader} from '../../components/Loader';\nimport {Fade} from '@material-ui/core';\n\ninterface IProps {\n  posts: {\n    data: Array<IPost>;\n    isLoading?: boolean;\n  };\n  getPostsThunk: Function;\n}\n\nconst PagePosts: React.FC<IProps> = ({posts, getPostsThunk}) => {\n  const [postsList, setPostsList] = useState(posts.data);\n  const [isLoading, setIsLoading] = useState(posts.isLoading);\n\n  useEffect(() => {\n    if (!posts.data.length) {\n      getPostsThunk();\n    }\n  }, [getPostsThunk, posts.data.length]);\n\n  useEffect(() => {\n    setPostsList(posts.data);\n  }, [posts.data]);\n\n  useEffect(() => {\n    setIsLoading(posts.isLoading);\n  }, [posts.isLoading, getPostsThunk]);\n\n  return (\n    <>\n      <h1>Статистика</h1>\n      {isLoading || !posts.data.length ? <Loader /> : null}\n      {postsList.map(({id, title}, idx) => (\n        <Fade key={id} in={true} timeout={200 * idx}>\n          <div>\n            <strong>{idx}.__ </strong> {title}\n          </div>\n        </Fade>\n      ))}\n    </>\n  );\n};\n\nexport const Stat = connect((state) => state, {getPostsThunk})(PagePosts);\n","export const actionPostsRequest = () => ({type: 'timra/posts/REQUEST'} as const);\nexport const actionPostsSuccess = (data: Array<Object>) => ({type: 'timra/posts/SUCCESS', payload: {data}} as const);\nexport const actionPostsFailure = (error: string) => ({type: 'timra/posts/SET_FAILURE', payload: {error}} as const);\n","import React, {FC} from 'react';\n\n// key={idx} value={el} setActive\n\ninterface IProps {\n  value: string;\n  isWinner: boolean | null;\n  setActive: () => void;\n}\n\nconst Circle: FC = () => (\n  <svg className=\"circle\">\n    <circle r=\"20\" cx=\"24\" cy=\"24\" stroke=\"#009688\" strokeWidth=\"5\" fill=\"none\" strokeLinecap=\"round\"></circle>\n  </svg>\n);\n\nconst Cross: FC = () => (\n  <svg className=\"cross\">\n    <line className=\"first\" x1=\"5\" y1=\"5\" x2=\"40\" y2=\"40\" stroke=\"#606060\" strokeWidth=\"5\" strokeLinecap=\"round\"></line>\n    <line className=\"second\" x1=\"40\" y1=\"5\" x2=\"5\" y2=\"40\" stroke=\"#606060\" strokeWidth=\"5\" strokeLinecap=\"round\"></line>\n  </svg>\n);\n\nexport const Square: FC<IProps> = ({value, isWinner, setActive}) => {\n  return (\n    <button className={`square ${isWinner ? 'square--winner' : ''}`} onClick={setActive}>\n      {value === 'O' && <Circle />}\n      {value === 'X' && <Cross />}\n    </button>\n  );\n};\n","import React, {FC, useState} from 'react';\nimport {Button} from '@material-ui/core';\nimport {Square} from '../../components/Square';\n\nexport const Board: FC = () => {\n  const [squares, setSquares] = useState<Array<string>>(Array(9).fill(null));\n  const [xIsNext, setXIsNext] = useState<boolean>(true);\n  const [winner, setWinner] = useState<null | Object>(null);\n  const [isTie, setIsTie] = useState<boolean>(false);\n\n  const getWinner = (squares: Array<string | null>) => {\n    // prettier-ignore\n    const winnerLines = [\n      // horizontal indexes\n      [0, 1, 2], [3, 4, 5], [6, 7, 8],\n      // vertical indexes\n      [0, 3, 6], [1, 4, 7], [2, 5, 8],\n      // diagonal indexes\n      [0, 4, 8], [2, 4, 6]\n    ];\n\n    for (let i = 0; i < winnerLines.length; i++) {\n      const [firstIdx, secondIdx, thirdIdx] = winnerLines[i];\n      // prettier-ignore\n      if (squares[firstIdx] &&\n        squares[firstIdx] === squares[secondIdx] &&\n        squares[firstIdx] === squares[thirdIdx])\n      {\n        return {winner: squares[firstIdx], idxs: [firstIdx, secondIdx, thirdIdx]};\n      }\n    }\n    return null;\n  };\n\n  const getStatus = (winner: string | null, xIsNext: boolean) => {\n    let status;\n    if (winner) {\n      status = 'Winner: ' + winner;\n    } else if (isTie) {\n      status = 'TIE !!!';\n    } else {\n      status = 'Next: ' + (xIsNext ? 'X' : '0');\n    }\n\n    return status;\n  };\n\n  const handleClick = (i: number) => {\n    const array: Array<string> = squares.slice();\n\n    if (getWinner(array) || squares[i]) {\n      return;\n    }\n    array[i] = xIsNext ? 'X' : 'O';\n\n    setSquares(array);\n    setXIsNext(!xIsNext);\n    const winnerEl = getWinner(array)?.winner || null;\n    setWinner(winnerEl);\n\n    const audioUrl = xIsNext ? 'https://timra.ru/portfolio/audio/cross.mp3' : 'https://timra.ru/portfolio/audio/zero.mp3';\n    const audio = new Audio(audioUrl);\n    audio.volume = 0.1;\n    audio.play();\n\n    setIsTie(array.filter((el) => el).length === 9);\n  };\n\n  const handlePlayAgain = () => {\n    setSquares(Array(9).fill(null));\n    setWinner(null);\n    setIsTie(false);\n  };\n\n  return (\n    <>\n      <div className={`status ${winner || isTie ? 'status--win' : ''} ${xIsNext ? 'status--nextX' : ''}`}>\n        &nbsp;{getStatus(getWinner(squares)?.winner || null, xIsNext)}\n      </div>\n      <div className={winner || isTie ? 'board  board--disabled' : 'board'}>\n        {squares.map((el, idx) => {\n          return (\n            <Square key={idx} value={el} isWinner={getWinner(squares)?.idxs.includes(idx) || null} setActive={() => handleClick(idx)} />\n          );\n        })}\n      </div>\n      {(winner || isTie) && (\n        <Button className=\"play-again\" variant=\"contained\" onClick={handlePlayAgain}>\n          Play again\n        </Button>\n      )}\n    </>\n  );\n};\n","import React from 'react';\nimport {Board} from '../containers/pages/Board';\nimport {refElement} from '../types';\n\ninterface IProps {\n  innerRef: (ref: refElement) => void;\n}\n\nexport const Game: React.FC<IProps> = ({innerRef}) => {\n  return (\n    <div className=\"game\" ref={innerRef}>\n      <div className=\"game--board\">\n        <h1 className=\"game--title\">Tic-Tac-Toe</h1>\n        <Board />\n      </div>\n    </div>\n  );\n};\n","export default __webpack_public_path__ + \"static/media/rs_school_js.ad178c0d.svg\";","import logoSrc from '../../assets/img/rs_school_js.svg';\n\nexport const Logo = () => (\n  <a href={'/'} className=\"logo\">\n    <img src={logoSrc} alt=\"\" className=\"logo__img\" />\n    <span className=\"logo__text\">\n      <span className=\"logo__title\">React game</span>\n    </span>\n  </a>\n);\n","import Button from '@material-ui/core/Button';\nimport {NavLink} from 'react-router-dom';\n\nconst LINKS = [\n  // {\n  //   name: 'Statistics',\n  //   path: '/stat/'\n  // },\n  {\n    name: 'Play',\n    path: '/'\n  }\n];\n\nexport const Nav = () => (\n  <>\n    <nav className=\"nav\">\n      {LINKS.map((item, index) => (\n        <Button key={index} component={NavLink} to={item.path} exact>\n          {item.name}\n        </Button>\n      ))}\n    </nav>\n  </>\n);\n","import React from 'react';\nimport IconButton from '@material-ui/core/IconButton';\nimport FullscreenIcon from '@material-ui/icons/Fullscreen';\ninterface IProps {\n  onBtnFullScreenClick: () => void;\n}\n\nexport const BtnFullScreen: React.FC<IProps> = ({onBtnFullScreenClick}) => {\n  return (\n    <IconButton onClick={onBtnFullScreenClick}>\n      <FullscreenIcon />\n    </IconButton>\n  );\n};\n","import React, {ObjectHTMLAttributes} from 'react';\nimport {createStyles, makeStyles, Theme, fade} from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport IconButton from '@material-ui/core/IconButton';\nimport SettingsIcon from '@material-ui/icons/Settings';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport {Container} from '@material-ui/core';\nimport {Logo} from './parts/Logo';\nimport VolumeOffIcon from '@material-ui/icons/VolumeOff';\nimport {Nav} from './parts/Nav';\nimport {BtnFullScreen} from './parts/BtnFullScreen';\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {},\n    menuButton: {\n      marginLeft: theme.spacing(2)\n    },\n    logo: {\n      flexGrow: 1\n    },\n    appBar: {\n      boxShadow: 'none',\n      borderBottom: '1px solid ' + fade(theme.palette.primary.light, 0.35)\n    },\n    sectionDesktop: {\n      display: 'none',\n      [theme.breakpoints.up('sm')]: {\n        display: 'flex',\n        alignItems: 'center'\n      }\n    },\n    sectionMobile: {\n      display: 'flex',\n      [theme.breakpoints.up('sm')]: {\n        display: 'none'\n      }\n    }\n  })\n);\n\ninterface IProps {\n  onBtnFullScreenClick: () => void;\n}\n\nexport const Header: React.FC<IProps> = ({onBtnFullScreenClick}) => {\n  const classes = useStyles();\n\n  return (\n    <AppBar position=\"sticky\" color=\"inherit\" className={classes.appBar}>\n      <Container maxWidth=\"xl\">\n        <Toolbar>\n          <Typography className={classes.logo}>\n            <Logo />\n          </Typography>\n          {/* <div className={classes.sectionDesktop}> */}\n          <Nav />\n          {/* <IconButton className={classes.menuButton}>\n              <SettingsIcon />\n            </IconButton>\n            <IconButton className={classes.menuButton}>\n              <VolumeOffIcon />\n            </IconButton> */}\n          <BtnFullScreen onBtnFullScreenClick={onBtnFullScreenClick} />\n          {/* </div> */}\n\n          <div className={classes.sectionMobile}>\n            <IconButton className={classes.menuButton} color=\"primary\">\n              <MenuIcon />\n            </IconButton>\n          </div>\n        </Toolbar>\n      </Container>\n    </AppBar>\n  );\n};\n","import logoSrc from '../assets/img/rs_school_js.svg';\nimport IconButton from '@material-ui/core/IconButton';\nimport GitHubIcon from '@material-ui/icons/GitHub';\n\nexport const Footer = () => (\n  <footer>\n    <IconButton color=\"primary\" href=\"https://github.com/TimraWork\" target=\"_blank\">\n      <GitHubIcon />\n    </IconButton>\n    <div className=\"copyright\">&copy; 2021</div>\n    <a href={'https://rs.school/react/'} className=\"footer-logo\" target=\"_blank\">\n      <img src={logoSrc} alt=\"\" className=\"footer-logo__img\" />\n    </a>\n  </footer>\n);\n","import React, {useState} from 'react';\nimport {Container} from '@material-ui/core';\nimport './assets/style/main.scss';\n\nimport {Stat} from './containers/pages/Stat';\nimport {Game} from './components/Game';\n\nimport {Header} from './components/Header';\nimport {Footer} from './components/Footer';\n\nimport {Switch, Route} from 'react-router-dom';\nimport {refElement} from './types';\n\ninterface IFullScreenRef extends HTMLElement {\n  msRequestFullscreen?: () => void;\n  webkitRequestFullScreen?: () => void;\n  mozRequestFullScreen?: () => void;\n}\n\nconst App: React.FC = () => {\n  const [fullScreenRef, setFullScreenRef] = useState<refElement>(null);\n\n  const setRef = (ref: refElement) => {\n    setFullScreenRef(ref);\n  };\n\n  const handleBtnFullScreenClick = () => {\n    const target: IFullScreenRef = fullScreenRef;\n    if (target && target.requestFullscreen) target.requestFullscreen();\n    if (target && target.webkitRequestFullScreen) target.webkitRequestFullScreen();\n    if (target && target.msRequestFullscreen) target.msRequestFullscreen();\n    if (target && target.mozRequestFullScreen) target.mozRequestFullScreen();\n  };\n\n  return (\n    <>\n      <Header onBtnFullScreenClick={handleBtnFullScreenClick} />\n      <Container maxWidth=\"xl\">\n        <Switch>\n          <Route exact path=\"/\">\n            <Game innerRef={setRef} />\n          </Route>\n          <Route exact path=\"/stat\" component={Stat} />\n        </Switch>\n      </Container>\n      <Footer />\n    </>\n  );\n};\n\nexport default App;\n","import {combineReducers} from 'redux';\nimport posts from './posts';\n\nconst rootReducer = combineReducers({\n  posts\n});\n\nexport type RootState = ReturnType<typeof rootReducer>;\nexport default rootReducer;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport {HashRouter} from 'react-router-dom';\nimport {theme} from './theme';\nimport App from './App';\n\nimport {store, persistor} from './redux/store';\nimport {PersistGate} from 'redux-persist/integration/react';\n\nimport {Provider} from 'react-redux';\nimport {ThemeProvider, CssBaseline} from '@material-ui/core';\n\nReactDOM.render(\n  <Provider store={store}>\n    <PersistGate loading={null} persistor={persistor}>\n      <HashRouter>\n        <ThemeProvider theme={theme}>\n          <CssBaseline />\n          <App />\n        </ThemeProvider>\n      </HashRouter>\n    </PersistGate>\n  </Provider>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}