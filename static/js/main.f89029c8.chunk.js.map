{"version":3,"sources":["theme.ts","components/Square.tsx","utils.ts","containers/GameStatus.tsx","containers/Board.tsx","components/Game.tsx","assets/img/rs_school_js.svg","components/parts/Logo.tsx","containers/BtnPlayMusic.tsx","components/Header.tsx","components/Footer.tsx","App.tsx","index.tsx"],"names":["ACCENT_COLOR","theme","createMuiTheme","palette","primary","main","secondary","typography","fontFamily","shape","borderRadius","overrides","MuiButton","root","fontWeight","fontSize","outline","Circle","className","r","cx","cy","stroke","strokeWidth","fill","strokeLinecap","Cross","x1","y1","x2","y2","Square","value","isWinner","setActive","onClick","fillArray","Array","getWinner","squares","winnerLines","i","length","firstIdx","secondIdx","thirdIdx","winner","idxs","playAudio","audioName","isMute","timeout","audioUrl","audio","Audio","volume","setTimeout","play","Status","WINNER","TIE","GameStatus","xIsNext","isTie","useState","status","setStatus","useEffect","isGameStarted","filter","el","STORAGE","Board","setSquares","setXIsNext","setWinner","setIsTie","getStorage","localStorage","getItem","JSON","parse","isGameTie","map","idx","includes","array","slice","setItem","stringify","handleSquareClick","Button","variant","removeItem","Game","innerRef","handleFullscreenExitClick","ref","IconButton","Logo","href","src","logoSrc","alt","BtnPlayMusic","isMusicPlayed","setIsMusicPlayed","refMusic","useRef","current","defaultMuted","muted","autoPlay","loop","Header","onBtnFullScreenClick","onBtnVolumeMuteClick","Footer","color","target","App","fullScreenRef","setFullScreenRef","setIsMute","requestFullscreen","webkitRequestFullScreen","msRequestFullscreen","document","fullscreenElement","exitFullscreen","ReactDOM","render","ThemeProvider","CssBaseline","getElementById"],"mappings":"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","file":"static/js/main.f89029c8.chunk.js","sourcesContent":["import {createMuiTheme} from '@material-ui/core/styles';\nconst ACCENT_COLOR = 'rgb(0, 0, 0)';\n\nexport const theme = createMuiTheme({\n  palette: {\n    primary: {\n      main: ACCENT_COLOR\n    },\n    secondary: {\n      main: ACCENT_COLOR\n    }\n  },\n  typography: {\n    fontFamily: 'Jura'\n  },\n  shape: {\n    borderRadius: 20\n  },\n  overrides: {\n    MuiButton: {\n      root: {\n        fontWeight: 'bold',\n        fontSize: '17px',\n        '&:focus': {\n          outline: 'none'\n        }\n      }\n    }\n  }\n});\n","import React, {FC} from 'react';\n\ninterface IProps {\n  value: string | null;\n  isWinner: boolean | null;\n  setActive: () => void;\n}\n\nconst Circle: FC = () => (\n  <svg className=\"circle\">\n    <circle r=\"20\" cx=\"24\" cy=\"24\" stroke=\"#009688\" strokeWidth=\"5\" fill=\"none\" strokeLinecap=\"round\"></circle>\n  </svg>\n);\n\nconst Cross: FC = () => (\n  <svg className=\"cross\">\n    <line className=\"first\" x1=\"5\" y1=\"5\" x2=\"40\" y2=\"40\" stroke=\"#606060\" strokeWidth=\"5\" strokeLinecap=\"round\"></line>\n    <line className=\"second\" x1=\"40\" y1=\"5\" x2=\"5\" y2=\"40\" stroke=\"#606060\" strokeWidth=\"5\" strokeLinecap=\"round\"></line>\n  </svg>\n);\n\nexport const Square: FC<IProps> = ({value, isWinner, setActive}) => {\n  return (\n    <button className={`square ${isWinner ? 'square--winner' : ''}`} onClick={setActive}>\n      {value === 'O' && <Circle />}\n      {value === 'X' && <Cross />}\n    </button>\n  );\n};\n","export const fillArray = () => Array(9).fill(null);\n\nexport const getWinner = (squares: Array<string | null>) => {\n  // prettier-ignore\n  const winnerLines = [\n      [0, 1, 2], [3, 4, 5], [6, 7, 8], // horizontal indexes\n      [0, 3, 6], [1, 4, 7], [2, 5, 8], // vertical indexes\n      [0, 4, 8], [2, 4, 6] // diagonal indexes\n    ];\n\n  for (let i = 0; i < winnerLines.length; i++) {\n    const [firstIdx, secondIdx, thirdIdx] = winnerLines[i];\n    // prettier-ignore\n    if (squares[firstIdx] &&\n        squares[firstIdx] === squares[secondIdx] &&\n        squares[firstIdx] === squares[thirdIdx])\n      {\n        return {winner: squares[firstIdx], idxs: [firstIdx, secondIdx, thirdIdx]};\n      }\n  }\n\n  return null;\n};\n\nexport const playAudio = (audioName: string, isMute: boolean, timeout?: number) => {\n  if (!isMute) {\n    const audioUrl = `https://timra.ru/portfolio/audio/${audioName}.mp3`;\n    const audio: HTMLAudioElement = new Audio(audioUrl);\n    audio.volume = 0.1;\n    setTimeout(function () {\n      audio.play();\n    }, timeout || 0);\n  }\n};\n","import React, {FC, useEffect, useState} from 'react';\nimport {getWinner, playAudio} from '../utils';\n\ninterface IProps {\n  squares: Array<string | null>;\n  xIsNext: boolean;\n  isMute: boolean;\n  winner: string | null;\n  isTie: boolean;\n}\n\nconst Status = {\n  START: 'Start the game',\n  CONTINUE: 'Next: ',\n  endProperties: {\n    WINNER: 'Winner: ',\n    TIE: 'TIE'\n  }\n};\n\nexport const GameStatus: FC<IProps> = ({squares, xIsNext, isMute, winner, isTie}) => {\n  const [status, setStatus] = useState<string>(Status.START);\n\n  useEffect(() => {\n    const isGameStarted = !!squares.filter((el) => el).length;\n\n    if (!isGameStarted) {\n      setStatus(Status.START);\n    } else {\n      setStatus(`${Status.CONTINUE} ${xIsNext ? 'X' : '0'}`);\n    }\n  }, [squares, xIsNext]);\n\n  useEffect(() => {\n    if (winner) {\n      setStatus(Status.endProperties.WINNER);\n      playAudio('win', isMute, 1500);\n    } else if (isTie) {\n      setStatus(Status.endProperties.TIE);\n      playAudio('tie', isMute, 2000);\n    }\n  }, [winner, isTie]);\n\n  return (\n    <div className={`status ${winner || isTie ? 'status--win' : ''} ${xIsNext || status === Status.START ? 'status--nextX' : ''}`}>\n      {status} {winner}\n    </div>\n  );\n};\n","import React, {FC, useEffect, useState} from 'react';\nimport {Button} from '@material-ui/core';\nimport {Square} from '../components/Square';\nimport {fillArray, getWinner, playAudio} from '../utils';\nimport {GameStatus} from './GameStatus';\n\ninterface IProps {\n  isMute: boolean;\n}\n\nconst STORAGE = 'react-game/squares';\n\nexport const Board: FC<IProps> = ({isMute}) => {\n  const [squares, setSquares] = useState<Array<string | null>>(fillArray);\n  const [xIsNext, setXIsNext] = useState<boolean>(true);\n  const [winner, setWinner] = useState<string | null>(null);\n  const [isTie, setIsTie] = useState<boolean>(false);\n\n  useEffect(() => {\n    const getStorage = localStorage.getItem(STORAGE);\n    if (getStorage) setSquares(JSON.parse(getStorage || ''));\n  }, []);\n\n  useEffect(() => {\n    const winner = getWinner(squares)?.winner || null;\n    if (winner) {\n      setWinner(winner);\n    } else {\n      setWinner(null);\n    }\n\n    const isGameTie = !!(squares.filter((el) => el).length === 9);\n    setIsTie(isGameTie);\n  }, [squares]);\n\n  const handleSquareClick = (i: number) => {\n    const array = squares.slice();\n\n    if (getWinner(array) || squares[i]) return;\n    array[i] = xIsNext ? 'X' : 'O';\n\n    localStorage.setItem(STORAGE, JSON.stringify(array));\n\n    setSquares(array);\n    setXIsNext(!xIsNext);\n    playAudio(xIsNext ? 'cross' : 'zero', isMute);\n  };\n\n  const handleNewGameClick = () => {\n    setSquares(fillArray);\n    setWinner(null);\n    setIsTie(false);\n    setXIsNext(true);\n    localStorage.removeItem(STORAGE);\n  };\n\n  return (\n    <>\n      <GameStatus squares={squares} xIsNext={xIsNext} isMute={isMute} winner={winner} isTie={isTie} />\n      <div className={`board ${winner || isTie ? 'board--disabled' : ''}`}>\n        {squares.map((el, idx) => {\n          return (\n            <Square\n              key={idx}\n              value={el}\n              isWinner={getWinner(squares)?.idxs.includes(idx) || null}\n              setActive={() => handleSquareClick(idx)}\n            />\n          );\n        })}\n      </div>\n      {(winner || isTie) && (\n        <Button className=\"btn-new-game\" variant=\"contained\" onClick={handleNewGameClick}>\n          new game\n        </Button>\n      )}\n    </>\n  );\n};\n","import {IconButton} from '@material-ui/core';\nimport React from 'react';\nimport {Board} from '../containers/Board';\nimport {refElement} from '../types';\nimport FullscreenExitIcon from '@material-ui/icons/FullscreenExit';\ninterface IProps {\n  innerRef: (ref: refElement) => void;\n  isMute: boolean;\n  handleFullscreenExitClick: () => void;\n}\n\nexport const Game: React.FC<IProps> = ({innerRef, isMute, handleFullscreenExitClick}) => {\n  return (\n    <div className=\"game\" ref={innerRef}>\n      <IconButton className=\"FullscreenExitIcon\" onClick={handleFullscreenExitClick}>\n        <FullscreenExitIcon />\n      </IconButton>\n\n      <div className=\"game--board\">\n        <h1 className=\"game--title\">Tic-Tac-Toe</h1>\n        <Board isMute={isMute} />\n      </div>\n    </div>\n  );\n};\n","export default __webpack_public_path__ + \"static/media/rs_school_js.ad178c0d.svg\";","import logoSrc from '../../assets/img/rs_school_js.svg';\n\nexport const Logo = () => (\n  <a href={'/'} className=\"logo\">\n    <img src={logoSrc} alt=\"\" className=\"logo__img\" />\n    <span className=\"logo__text\">\n      <span className=\"logo__title\">React game</span>\n    </span>\n  </a>\n);\n","import React, {useState, useRef} from 'react';\nimport IconButton from '@material-ui/core/IconButton';\nimport MusicNoteIcon from '@material-ui/icons/MusicNote';\nimport MusicOffIcon from '@material-ui/icons/MusicOff';\n\nconst MUSIC_URL = 'https://timra.ru/portfolio/audio/music.mp3';\n\nexport const BtnPlayMusic: React.FC = () => {\n  const [isMusicPlayed, setIsMusicPlayed] = useState<boolean>(true);\n  const refMusic = useRef<HTMLAudioElement>(null);\n\n  const handleMusicToggleClick = () => {\n    setIsMusicPlayed(!isMusicPlayed);\n\n    if (!refMusic.current) {\n      return;\n    }\n\n    if (!isMusicPlayed) {\n      refMusic.current.defaultMuted = true;\n      refMusic.current.muted = true;\n    } else {\n      refMusic.current.defaultMuted = false;\n      refMusic.current.muted = false;\n    }\n  };\n\n  return (\n    <>\n      <IconButton onClick={handleMusicToggleClick}>{!isMusicPlayed ? <MusicOffIcon /> : <MusicNoteIcon />}</IconButton>\n      {!isMusicPlayed && <audio autoPlay loop ref={refMusic} src={MUSIC_URL} />}\n    </>\n  );\n};\n","import React from 'react';\nimport IconButton from '@material-ui/core/IconButton';\nimport {Logo} from './parts/Logo';\nimport FullscreenIcon from '@material-ui/icons/Fullscreen';\nimport VolumeOffIcon from '@material-ui/icons/VolumeOff';\nimport VolumeUpIcon from '@material-ui/icons/VolumeUp';\nimport {BtnPlayMusic} from '../containers/BtnPlayMusic';\n\ninterface IProps {\n  onBtnFullScreenClick: () => void;\n  onBtnVolumeMuteClick?: () => void;\n  isMute: boolean;\n}\n\nexport const Header: React.FC<IProps> = ({onBtnFullScreenClick, onBtnVolumeMuteClick, isMute}) => {\n  return (\n    <header>\n      <Logo />\n\n      <IconButton onClick={onBtnFullScreenClick}>\n        <FullscreenIcon />\n      </IconButton>\n\n      <BtnPlayMusic />\n\n      <IconButton onClick={onBtnVolumeMuteClick}>{!isMute ? <VolumeOffIcon /> : <VolumeUpIcon />}</IconButton>\n    </header>\n  );\n};\n","import logoSrc from '../assets/img/rs_school_js.svg';\nimport IconButton from '@material-ui/core/IconButton';\nimport GitHubIcon from '@material-ui/icons/GitHub';\n\nexport const Footer = () => (\n  <footer>\n    <IconButton color=\"primary\" href=\"https://github.com/TimraWork\" target=\"_blank\">\n      <GitHubIcon />\n    </IconButton>\n    <div className=\"copyright\">&copy; 2021</div>\n    <a href={'https://rs.school/react/'} className=\"footer-logo\" target=\"_blank\">\n      <img src={logoSrc} alt=\"\" className=\"footer-logo__img\" />\n    </a>\n  </footer>\n);\n","import React, {useState} from 'react';\n\nimport {Game} from './components/Game';\n\nimport {Header} from './components/Header';\nimport {Footer} from './components/Footer';\n\nimport {refElement} from './types';\nimport {playAudio} from './utils';\n\ninterface IFullScreenRef extends HTMLElement {\n  msRequestFullscreen?: () => void;\n  webkitRequestFullScreen?: () => void;\n}\n\nconst App: React.FC = () => {\n  const [fullScreenRef, setFullScreenRef] = useState<refElement>(null);\n  const [isMute, setIsMute] = useState<boolean>(false);\n\n  const setRef = (ref: refElement) => {\n    setFullScreenRef(ref);\n  };\n\n  const handleBtnFullScreenClick = () => {\n    const target: IFullScreenRef = fullScreenRef;\n    if (target && target.requestFullscreen) target.requestFullscreen();\n    if (target && target.webkitRequestFullScreen) target.webkitRequestFullScreen();\n    if (target && target.msRequestFullscreen) target.msRequestFullscreen();\n  };\n\n  const handleBtnVolumeMuteClick = () => {\n    if (isMute) playAudio('mute', isMute);\n    setIsMute(!isMute);\n  };\n\n  const handleFullscreenExitClick = () => {\n    if (document.fullscreenElement) document.exitFullscreen();\n  };\n\n  return (\n    <>\n      <Header isMute={isMute} onBtnFullScreenClick={handleBtnFullScreenClick} onBtnVolumeMuteClick={handleBtnVolumeMuteClick} />\n      <Game isMute={isMute} innerRef={setRef} handleFullscreenExitClick={handleFullscreenExitClick} />\n      <Footer />\n    </>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport {theme} from './theme';\n\nimport './assets/style/main.scss';\nimport {ThemeProvider, CssBaseline} from '@material-ui/core';\n\nimport App from './App';\n\nReactDOM.render(\n  <ThemeProvider theme={theme}>\n    <CssBaseline />\n    <App />\n  </ThemeProvider>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}