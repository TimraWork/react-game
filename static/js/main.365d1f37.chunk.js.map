{"version":3,"sources":["theme.ts","components/Square.tsx","containers/pages/utils.ts","containers/pages/Board.tsx","components/Game.tsx","assets/img/rs_school_js.svg","components/parts/Logo.tsx","components/Header.tsx","components/Footer.tsx","App.tsx","redux/posts/reducers.ts","redux/api.ts","redux/posts/thunks.ts","redux/store.ts","redux/rootReducer.ts","index.tsx"],"names":["ACCENT_COLOR","theme","createMuiTheme","palette","primary","main","secondary","typography","fontFamily","shape","borderRadius","overrides","MuiButton","root","fontWeight","fontSize","outline","Circle","className","r","cx","cy","stroke","strokeWidth","fill","strokeLinecap","Cross","x1","y1","x2","y2","Square","value","isWinner","setActive","onClick","getWinner","squares","winnerLines","i","length","firstIdx","secondIdx","thirdIdx","winner","idxs","getStatus","xIsNext","isTie","playAudio","audioName","audioUrl","audio","Audio","volume","play","Board","isMute","useState","Array","setSquares","setXIsNext","setWinner","setIsTie","useEffect","winnerEl","filter","el","setTimeout","map","idx","includes","array","slice","handleClick","Button","variant","Game","innerRef","ref","Logo","href","src","logoSrc","alt","Header","onBtnFullScreenClick","onBtnVolumeMuteClick","IconButton","Footer","color","target","App","fullScreenRef","setFullScreenRef","setIsMute","requestFullscreen","webkitRequestFullScreen","msRequestFullscreen","mozRequestFullScreen","initialState","data","isLoading","error","posts","state","action","type","payload","_transformPosts","id","title","getPostsRequest","a","axios","get","console","preloadedState","rootReducer","combineReducers","persistConfig","key","storage","persistedReducer","persistReducer","composeEnhancers","compose","store","createStore","applyMiddleware","thunkMiddleware","persistor","persistStore","ReactDOM","render","loading","ThemeProvider","CssBaseline","document","getElementById"],"mappings":"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","file":"static/js/main.365d1f37.chunk.js","sourcesContent":["import {createMuiTheme} from '@material-ui/core/styles';\nconst ACCENT_COLOR = 'rgb(0, 0, 0)';\n\nexport const theme = createMuiTheme({\n  palette: {\n    primary: {\n      main: ACCENT_COLOR\n    },\n    secondary: {\n      main: ACCENT_COLOR\n    }\n  },\n  typography: {\n    fontFamily: 'Jura'\n  },\n  shape: {\n    borderRadius: 20\n  },\n  overrides: {\n    MuiButton: {\n      root: {\n        fontWeight: 'bold',\n        fontSize: '17px',\n        '&:focus': {\n          outline: 'none'\n        }\n      }\n    }\n  }\n});\n","import React, {FC} from 'react';\n\ninterface IProps {\n  value: string;\n  isWinner: boolean | null;\n  setActive: () => void;\n}\n\nconst Circle: FC = () => (\n  <svg className=\"circle\">\n    <circle r=\"20\" cx=\"24\" cy=\"24\" stroke=\"#009688\" strokeWidth=\"5\" fill=\"none\" strokeLinecap=\"round\"></circle>\n  </svg>\n);\n\nconst Cross: FC = () => (\n  <svg className=\"cross\">\n    <line className=\"first\" x1=\"5\" y1=\"5\" x2=\"40\" y2=\"40\" stroke=\"#606060\" strokeWidth=\"5\" strokeLinecap=\"round\"></line>\n    <line className=\"second\" x1=\"40\" y1=\"5\" x2=\"5\" y2=\"40\" stroke=\"#606060\" strokeWidth=\"5\" strokeLinecap=\"round\"></line>\n  </svg>\n);\n\nexport const Square: FC<IProps> = ({value, isWinner, setActive}) => {\n  return (\n    <button className={`square ${isWinner ? 'square--winner' : ''}`} onClick={setActive}>\n      {value === 'O' && <Circle />}\n      {value === 'X' && <Cross />}\n    </button>\n  );\n};\n","export const getWinner = (squares: Array<string | null>) => {\n  // prettier-ignore\n  const winnerLines = [\n      [0, 1, 2], [3, 4, 5], [6, 7, 8], // horizontal indexes\n      [0, 3, 6], [1, 4, 7], [2, 5, 8], // vertical indexes\n      [0, 4, 8], [2, 4, 6] // diagonal indexes\n    ];\n\n  for (let i = 0; i < winnerLines.length; i++) {\n    const [firstIdx, secondIdx, thirdIdx] = winnerLines[i];\n    // prettier-ignore\n    if (squares[firstIdx] &&\n        squares[firstIdx] === squares[secondIdx] &&\n        squares[firstIdx] === squares[thirdIdx])\n      {\n        return {winner: squares[firstIdx], idxs: [firstIdx, secondIdx, thirdIdx]};\n      }\n  }\n\n  return null;\n};\n\nexport const getStatus = (winner: string | null, xIsNext: boolean, isTie: boolean) => {\n  let status;\n  if (winner) {\n    status = 'Winner: ' + winner;\n  } else if (isTie) {\n    status = 'TIE !!!';\n  } else {\n    status = 'Next: ' + (xIsNext ? 'X' : '0');\n  }\n\n  return status;\n};\n\nexport const playAudio = (audioName: string) => {\n  const audioUrl = `https://timra.ru/portfolio/audio/${audioName}.mp3`;\n  const audio = new Audio(audioUrl);\n  audio.volume = 0.1;\n  audio.play();\n};\n","import React, {FC, useEffect, useState} from 'react';\nimport {Button} from '@material-ui/core';\nimport {Square} from '../../components/Square';\nimport {getWinner, getStatus, playAudio} from './utils';\n\ninterface IProps {\n  isMute: boolean;\n}\n\nexport const Board: FC<IProps> = ({isMute}) => {\n  const [squares, setSquares] = useState<Array<string>>(Array(9).fill(null));\n  const [xIsNext, setXIsNext] = useState<boolean>(true);\n  const [winner, setWinner] = useState<null | Object>(null);\n  const [isTie, setIsTie] = useState<boolean>(false);\n\n  useEffect(() => {\n    const winnerEl = getWinner(squares)?.winner || null;\n\n    setWinner(winnerEl);\n    setIsTie(squares.filter((el) => el).length === 9);\n  }, [squares, xIsNext]);\n\n  const handleClick = (i: number) => {\n    const array: Array<string> = squares.slice();\n\n    if (getWinner(array) || squares[i]) return;\n    array[i] = xIsNext ? 'X' : 'O';\n\n    setSquares(array);\n    setXIsNext(!xIsNext);\n    const audioName = xIsNext ? 'cross' : 'zero';\n    if (!isMute) playAudio(audioName);\n  };\n\n  const handlePlayAgain = () => {\n    setSquares(Array(9).fill(null));\n    setWinner(null);\n    setIsTie(false);\n  };\n\n  useEffect(() => {\n    setTimeout(function () {\n      if (!isMute && winner && !isTie) playAudio('win');\n    }, 2000);\n  }, [winner, isTie]);\n\n  useEffect(() => {\n    setTimeout(function () {\n      if (!isMute && isTie && !winner) playAudio('tie');\n    }, 1500);\n  }, [isTie, winner]);\n\n  return (\n    <>\n      <div className={`status ${winner || isTie ? 'status--win' : ''} ${xIsNext ? 'status--nextX' : ''}`}>\n        &nbsp; {getStatus(getWinner(squares)?.winner || null, xIsNext, isTie)}\n      </div>\n      <div className={winner || isTie ? 'board  board--disabled' : 'board'}>\n        {squares.map((el, idx) => {\n          return <Square key={idx} value={el} isWinner={getWinner(squares)?.idxs.includes(idx) || null} setActive={() => handleClick(idx)} />;\n        })}\n      </div>\n      {(winner || isTie) && (\n        <Button className=\"btn-new-game\" variant=\"contained\" onClick={handlePlayAgain}>\n          new game\n        </Button>\n      )}\n    </>\n  );\n};\n","import React from 'react';\nimport {Board} from '../containers/pages/Board';\nimport {refElement} from '../types';\n\ninterface IProps {\n  innerRef: (ref: refElement) => void;\n  isMute: boolean;\n}\n\nexport const Game: React.FC<IProps> = ({innerRef, isMute}) => {\n  return (\n    <div className=\"game\" ref={innerRef}>\n      <div className=\"game--board\">\n        <h1 className=\"game--title\">Tic-Tac-Toe</h1>\n        <Board isMute={isMute} />\n      </div>\n    </div>\n  );\n};\n","export default __webpack_public_path__ + \"static/media/rs_school_js.ad178c0d.svg\";","import logoSrc from '../../assets/img/rs_school_js.svg';\n\nexport const Logo = () => (\n  <a href={'/'} className=\"logo\">\n    <img src={logoSrc} alt=\"\" className=\"logo__img\" />\n    <span className=\"logo__text\">\n      <span className=\"logo__title\">React game</span>\n    </span>\n  </a>\n);\n","import React from 'react';\nimport IconButton from '@material-ui/core/IconButton';\nimport {Logo} from './parts/Logo';\nimport FullscreenIcon from '@material-ui/icons/Fullscreen';\nimport VolumeOffIcon from '@material-ui/icons/VolumeOff';\nimport VolumeUpIcon from '@material-ui/icons/VolumeUp';\n\ninterface IProps {\n  onBtnFullScreenClick: () => void;\n  onBtnVolumeMuteClick?: () => void;\n  isMute: boolean;\n}\n\nexport const Header: React.FC<IProps> = ({onBtnFullScreenClick, onBtnVolumeMuteClick, isMute}) => {\n  return (\n    <header>\n      <Logo />\n      <IconButton onClick={onBtnFullScreenClick}>\n        <FullscreenIcon />\n      </IconButton>\n      <IconButton onClick={onBtnVolumeMuteClick}>{!isMute ? <VolumeOffIcon /> : <VolumeUpIcon />}</IconButton>\n    </header>\n  );\n};\n","import logoSrc from '../assets/img/rs_school_js.svg';\nimport IconButton from '@material-ui/core/IconButton';\nimport GitHubIcon from '@material-ui/icons/GitHub';\n\nexport const Footer = () => (\n  <footer>\n    <IconButton color=\"primary\" href=\"https://github.com/TimraWork\" target=\"_blank\">\n      <GitHubIcon />\n    </IconButton>\n    <div className=\"copyright\">&copy; 2021</div>\n    <a href={'https://rs.school/react/'} className=\"footer-logo\" target=\"_blank\">\n      <img src={logoSrc} alt=\"\" className=\"footer-logo__img\" />\n    </a>\n  </footer>\n);\n","import React, {useState} from 'react';\n\nimport {Game} from './components/Game';\n\nimport {Header} from './components/Header';\nimport {Footer} from './components/Footer';\n\nimport {refElement} from './types';\nimport {playAudio} from './containers/pages/utils';\n\ninterface IFullScreenRef extends HTMLElement {\n  msRequestFullscreen?: () => void;\n  webkitRequestFullScreen?: () => void;\n  mozRequestFullScreen?: () => void;\n}\n\nconst App: React.FC = () => {\n  const [fullScreenRef, setFullScreenRef] = useState<refElement>(null);\n  const [isMute, setIsMute] = useState<boolean>(false);\n\n  const setRef = (ref: refElement) => {\n    setFullScreenRef(ref);\n  };\n\n  const handleBtnFullScreenClick = () => {\n    const target: IFullScreenRef = fullScreenRef;\n    if (target && target.requestFullscreen) target.requestFullscreen();\n    if (target && target.webkitRequestFullScreen) target.webkitRequestFullScreen();\n    if (target && target.msRequestFullscreen) target.msRequestFullscreen();\n    if (target && target.mozRequestFullScreen) target.mozRequestFullScreen();\n  };\n\n  const handleBtnVolumeMuteClick = () => {\n    if (isMute) playAudio('mute');\n    setIsMute(!isMute);\n  };\n\n  return (\n    <>\n      <Header onBtnFullScreenClick={handleBtnFullScreenClick} onBtnVolumeMuteClick={handleBtnVolumeMuteClick} isMute={isMute} />\n      <Game innerRef={setRef} isMute={isMute} />\n      <Footer />\n    </>\n  );\n};\n\nexport default App;\n","import {ActionTypes} from '../../types';\n\nconst initialState = {\n  data: [] as Array<Object> | [],\n  isLoading: false as boolean,\n  error: null as string | null\n};\n\ntype InitialStateType = typeof initialState;\n\nconst posts = (state: InitialStateType = initialState, action: ActionTypes): InitialStateType => {\n  switch (action.type) {\n    case 'timra/posts/REQUEST': {\n      return {\n        ...state,\n        isLoading: true\n      };\n    }\n    case 'timra/posts/SUCCESS': {\n      return {\n        ...state,\n        data: action.payload.data,\n        isLoading: false\n      };\n    }\n    case 'timra/posts/SET_FAILURE': {\n      return {\n        ...state,\n        isLoading: false,\n        error: action.payload.error\n      };\n    }\n    default:\n      return state;\n  }\n};\n\nexport default posts;\n","import {IPost} from '../types';\nimport axios from 'axios';\n\nexport interface IPostTransform {\n  id: number;\n  title: string;\n}\n\nconst _transformPosts = ({id, title}: IPost): IPostTransform => {\n  return {\n    id: id,\n    // img: _embedded['wp:featuredmedia'] ? _embedded['wp:featuredmedia'][0]['source_url'] : this._pushImageUrl,\n    title: title['rendered']\n    // date: this._formatDate(date),\n    // excerpt: excerpt['rendered']\n  };\n};\n\nexport const getPostsRequest = async () => {\n  try {\n    // const {data} = await axios.get<IPost[]>('https://timra.ru/timra/wp-json/wp/v2/posts?_embed&per_page=20&page=1');\n    const {data} = await axios.get('https://timra.ru/timra/wp-json/wp/v2/posts?_embed&per_page=20&page=1');\n    // console.log('data[0] = ', data[0]);\n    return data.map(_transformPosts);\n  } catch (err) {\n    console.error('ERROR IN API = ', err);\n  }\n};\n\ngetPostsRequest();\n","import {ThunkAction} from 'redux-thunk';\nimport {RootState} from '../rootReducer';\nimport {Action} from 'redux';\nimport {actionPostsSuccess, actionPostsRequest} from './actions';\nimport {getPostsRequest} from '../api';\n\nexport const getPostsThunk = (): ThunkAction<void, RootState, unknown, Action<string>> => async (dispatch) => {\n  dispatch(actionPostsRequest());\n  const postsList = await getPostsRequest();\n  dispatch(actionPostsSuccess(postsList));\n};\n","import {createStore, compose, applyMiddleware} from 'redux';\nimport rootReducer from './rootReducer';\nimport thunkMiddleware from 'redux-thunk';\nimport {persistStore, persistReducer} from 'redux-persist';\nimport storage from 'redux-persist/lib/storage';\n\nconst persistConfig = {\n  key: 'root',\n  storage\n};\n\nconst persistedReducer = persistReducer(persistConfig, rootReducer);\n\nconst composeEnhancers =\n  process.env.NODE_ENV !== 'production' &&\n  typeof (window as any) === 'object' &&\n  (window as any).__REDUX_DEVTOOLS_EXTENSION_COMPOSE__\n    ? (window as any).__REDUX_DEVTOOLS_EXTENSION_COMPOSE__({})\n    : compose;\n\nconst configureStore = (preloadedState: any) =>\n  createStore(persistedReducer, preloadedState, composeEnhancers(applyMiddleware(thunkMiddleware)));\n\nconst store = configureStore({});\nconst persistor = persistStore(store);\n\nexport {store, persistor};\n","import {combineReducers} from 'redux';\nimport posts from './posts';\n\nconst rootReducer = combineReducers({\n  posts\n});\n\nexport type RootState = ReturnType<typeof rootReducer>;\nexport default rootReducer;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport {HashRouter} from 'react-router-dom';\nimport {theme} from './theme';\nimport './assets/style/main.scss';\n\nimport App from './App';\n\nimport {store, persistor} from './redux/store';\nimport {PersistGate} from 'redux-persist/integration/react';\n\nimport {Provider} from 'react-redux';\nimport {ThemeProvider, CssBaseline} from '@material-ui/core';\n\nReactDOM.render(\n  <Provider store={store}>\n    <PersistGate loading={null} persistor={persistor}>\n      <HashRouter>\n        <ThemeProvider theme={theme}>\n          <CssBaseline />\n          <App />\n        </ThemeProvider>\n      </HashRouter>\n    </PersistGate>\n  </Provider>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}